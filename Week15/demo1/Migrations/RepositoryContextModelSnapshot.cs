// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace demo1.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("Model.Company", b =>
                {
                    b.Property<int>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CompanyId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            CompanyId = 1,
                            Country = "USA",
                            Name = "Apple"
                        },
                        new
                        {
                            CompanyId = 2,
                            Country = "South Korea",
                            Name = "Samsung"
                        },
                        new
                        {
                            CompanyId = 3,
                            Country = "China",
                            Name = "Huawei"
                        });
                });

            modelBuilder.Entity("Model.Phone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .HasColumnType("TEXT");

                    b.Property<int>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<double>("Size")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Phones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "White",
                            CompanyId = 2,
                            Model = "Samsung Galaxy S10",
                            Price = 1299m,
                            Size = 4.7000000000000002
                        },
                        new
                        {
                            Id = 2,
                            Color = "Black",
                            CompanyId = 1,
                            Model = "iPhone 7",
                            Price = 1499m,
                            Size = 4.7000000000000002
                        },
                        new
                        {
                            Id = 3,
                            Color = "White",
                            CompanyId = 3,
                            Model = "P30 Pro",
                            Price = 1699m,
                            Size = 4.7000000000000002
                        },
                        new
                        {
                            Id = 4,
                            Color = "Black",
                            CompanyId = 1,
                            Model = "iPhone 11 Pro Max",
                            Price = 1999m,
                            Size = 5.7999999999999998
                        });
                });

            modelBuilder.Entity("Model.Phone", b =>
                {
                    b.HasOne("Model.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });
#pragma warning restore 612, 618
        }
    }
}
